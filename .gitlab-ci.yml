image: maven:latest

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=./.m2/repository"

stages:
  - build
  - test
  - sonar-scan
  - package
  - deploy

test:
  stage: test
  tags:
    - prod
  script:
    - echo 'testing'
    - mvn test

build:
  stage: build
  only:
    - dev
    - master
  tags:
    - prod
  script:
    - mvn compile
  cache:
    paths:
      - ./target
      - ./.m2

sonar-scan:
  stage: sonar-scan
  image: maven:3.8.3-openjdk-17
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  tags:
    - prod
  script:
    - mvn sonar:sonar -Dsonar.jdbc.url=jdbc:h2:tcp://195.161.114.18:9000//sonar -Dsonar.host.url=http://195.161.114.18:9000/
    - mvn verify sonar:sonar -Dsonar.projectKey=javapro_team26_backend_AYKCbGiS_BNLy3Kxz_em
  allow_failure: true

package:
  stage: package
  only:
    - dev
    - master
  tags:
    - prod
  script:
    - mvn package -Dmaven.test.skip=true
  artifacts:
    paths:
      - target/*.jar
  cache:
    policy: pull
    paths:
      - ./target
      - ./.m2

deploy:
  stage: deploy
  only:
    - dev
    - master
  tags:
    - prod
  before_script:
    - which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )
    - eval $(ssh-agent -s)
    - echo "${SSH_PRIVATE_KEY}" | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $DEV_HOST >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - scp target/zero-0.0.1-SNAPSHOT.jar $DEV_USER@$DEV_HOST:$DEV_APP_PATH/
    - scp docker-compose.yml $DEV_USER@$DEV_HOST:$DEV_APP_PATH/
    - ssh $DEV_USER@$DEV_HOST "docker-compose stop"
    - ssh $DEV_USER@$DEV_HOST "mv zero-0.0.1-SNAPSHOT.jar app.jar"
    - ssh $DEV_USER@$DEV_HOST "docker-compose up -d"