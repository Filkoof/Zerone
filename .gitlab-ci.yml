image: maven:latest

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=./.m2/repository"

stages:
  - build
  - test
  - liquibase
  - sonar-scan
  - package
  - deploy

#build:
#  stage: build
#  only:
#    - dev
#    - master
#  tags:
#    - prod
#  script:
#    - mvn compile
#  cache:
#    paths:
#      - ./target
#      - ./.m2
#
#test:
#  stage: test
#  tags:
#    - prod
#  script:
#    - echo 'testing'
#    - mvn test

liquibase:
  stage: liquibase
  image: liquibase/liquibase
  tags:
    - prod
  script:
    - echo "Тут будет прописана логика миграции бд при деплое"
    - liquibase update --url=jdbc:postgresql://195.161.62.32:5432/postgres --username=zerone --password=7tsfft --changeLogFile=src/main/resources/db/changelog/db.changelog-master.yaml


#sonar-scan:
#  stage: sonar-scan
#  image: maven:3.8.3-openjdk-17
#  variables:
#    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
#    GIT_DEPTH: "0"
#  cache:
#    key: "${CI_JOB_NAME}"
#    paths:
#      - .sonar/cache
#  tags:
#    - prod
#  script:
#    - mvn verify sonar:sonar -Dsonar.projectKey=javapro_team26_backend_AYNt25KFdLkB2ItqvUE7
#  allow_failure: true

package:
  stage: package
  only:
    - dev
    - master
  tags:
    - prod
  script:
    - mvn package -Dmaven.test.skip=true
  artifacts:
    paths:
      - target/*.jar
  cache:
    policy: pull
    paths:
      - ./target
      - ./.m2

deploy:
  stage: deploy
  only:
    - dev
    - master
  tags:
    - prod
  before_script:
    - which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )
    - eval $(ssh-agent -s)
    - echo "${SSH_PRIVATE_KEY}" | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $DEV_HOST >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - scp target/zero-0.0.1-SNAPSHOT.jar $DEV_USER@$DEV_HOST:$DEV_APP_PATH/
    - scp docker-compose.yml $DEV_USER@$DEV_HOST:$DEV_APP_PATH/
    - scp -r sonarqube $DEV_USER@$DEV_HOST:$DEV_APP_PATH/
    - ssh $DEV_USER@$DEV_HOST "docker-compose stop"
    - ssh $DEV_USER@$DEV_HOST "mv zero-0.0.1-SNAPSHOT.jar app.jar"
    - ssh $DEV_USER@$DEV_HOST "docker-compose up -d"